// C 스타일 스트링
/*
	C 언어는 스트링을 문자 배열로 표현했다. 
	스트링의 마지막에 널 문자(\0)를 붙여서 스트링이 끝났음을 표현했다.
	이런 널 문자에 대한 공식 기호는 NUL이다.
	L이 두 개가 아니라 하나이며 NULL 포인터와는 다른 값이다.

	C++에서는 C 언어에서 사용하던 스트링 연산에 대한 함수도 제공하며 
	이러한 함수는 <cstring> 헤더 파일에 정의되어 있다.
	그리고 대체로 메모리 할당 기능을 제공하지 않는다.

		char* result = new char[strlen(str)]; // 버그! 한 칸이 부족하다.

	C 스타일의 스트링을 다룰 때는 항상 이 점을 명심해야 한다.

		char* result = new char[strlen(str) + 1];

	C 스타일 스트링에 적용할 때는 sizeof()와 strlen()의 결과는 전혀 다르다.
	sizeof()의 리턴값은 C 스타일 스트링이 저장된 방식에 따라 다르기 때문이다.
	예를 들어 스트링을 char[]로 저장하면 sizeof()는 '\0'을 포함하여 그 스트링에 대해 
	실제로 할당된 메모리 크기를 리턴한다.
	반면 C 스타일 스트링을 char*로 저장했다면 sizeof()는 포인터의 크기를 리턴한다.

		const char* text = "abcdef";
		sizeof(text); // 플랫폼마다 다르다.
		strlen(text); // 6

	이 코드를 32비트 모드에서 컴파일하면 값은 4고, 64비트 모드에서 컴파일하면 8이다.
	sizeof()가 포인터의 타입인 const char*의 크기를 리턴하기 때문이다.
*/